{"version":3,"sources":["redux/ducks/currency.js","routes.js","images/star.svg","components/Convert/Convert.js","components/CurrencyList/CurrencyList.js","components/CurrencyRow/CurrencyRow.js","components/Empty/Empty.js","components/MainLoader/MainLoader.js","components/Navigation/Navigation.js","images/starEmpty.svg","images/equal.svg","images/return-of-investment.svg","styled/BtnEmpty.js","styled/BtnFavorite.js","styled/Container.js","styled/EmptyFavorites.js","styled/Favorite.js","styled/FormBox.js","styled/FormControl.js","styled/FormCurrency.js","styled/FormEqually.js","styled/FormSelect.js","styled/Header.js","styled/ItemContainer.js","styled/ItemFavorites.js","styled/ListFavorite.js","styled/LoaderMain.js","styled/Logo.js","styled/Main.js","styled/MainTitle.js","styled/Nav.js","styled/NavLink.js","styled/NavigationItems.js","styled/NavigationList.js","styled/Option.js","styled/Title.js","styled/TitleHome.js","styled/Value.js","App.js","redux/store.js","styles/globalStyles.js","index.js","styles/theme.js"],"names":["sagaWatcher","sagaWorker","fetchAvailableCurrency","workerUpdateData","watchUpdateData","updateCurrency","BASE_URL","getCurrency","state","currency","currencyTypes","getCurrencyArray","rates","base","Object","keys","getFromCurrency","getToCurrency","getFavorites","favorite","getNumberOfFavorites","length","getRegularCurrency","favorites","filter","n","indexOf","getExchangeRate","rate","getDataUrl","data","getUpdatedData","updatedData","addFavorite","text","type","payload","deleteFavorite","addExchangeRate","fetchCurrency","loadData","updateData","first","second","from","to","exchangeRateReducer","action","favoriteReducer","item","initialState","currencyReducer","updateState","updateDataReducer","fetchUpdatedCurrency","putUpdatedDataReducer","takeEvery","call","put","fetch","then","response","json","catch","err","console","log","select","home","module","exports","Convert","CurrencyRow","CurrencyList","dispatch","useDispatch","useSelector","regularCurrency","numberOfFavorites","toggleFavAction","includes","map","key","onClick","defaultProps","useEffect","selectedFromCurrency","selectedToCurrency","selectedExchangeRate","useState","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","firstExchange","useRef","current","fromAmount","toAmount","toFixed","Container","value","onChange","e","target","className","as","name","Empty","MainLoader","color","height","width","Navigation","routes","BtnEmpty","styled","section","star","BtnFavorite","EmptyFavorites","li","props","theme","colors","Favorite","div","white","FormBox","FormControl","Form","Control","FormCurrency","FormEqually","equally","FormSelect","Header","header","ItemContainer","ItemFavorites","ListFavorite","ul","LoaderMain","Logo","myImage","Main","main","MainTitle","h1","hover","Nav","nav","NavLinks","NavLink","NavigationItems","NavigationList","Option","option","Title","h2","TitleHome","Value","p","Home","lazy","Currency","App","fallback","path","exact","component","saga","createSagaMiddleware","persistConfig","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","run","persistor","persistStore","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","loading","dark","document","getElementById"],"mappings":"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","file":"static/js/main.7603bd4b.chunk.js","sourcesContent":["import { call, put, takeEvery, select } from \"redux-saga/effects\";\r\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\r\n\r\n// Selectors\r\n\r\nexport const getCurrency = (state) => state.currency.currencyTypes;\r\n\r\nexport const getCurrencyArray = (state) => {\r\n  const currency = getCurrency(state);\r\n  if (currency.rates && currency.base) {\r\n    return [currency.base, ...Object.keys(currency.rates)];\r\n  }\r\n};\r\n\r\nexport const getFromCurrency = (state) => {\r\n  const currency = getCurrency(state);\r\n  if (currency.base) {\r\n    return currency.base;\r\n  }\r\n};\r\n\r\nexport const getToCurrency = (state) => {\r\n  const currency = getCurrency(state);\r\n  if (currency.rates) {\r\n    return Object.keys(currency.rates)[0];\r\n  }\r\n};\r\n\r\nexport const getFavorites = (state) => state.favorite;\r\nexport const getNumberOfFavorites = (state) => state.favorite.length;\r\nexport const getRegularCurrency = (state) => {\r\n  const currency = getCurrencyArray(state);\r\n  const favorites = getFavorites(state);\r\n  if (currency) {\r\n    return currency.filter((n) => favorites.indexOf(n) === -1);\r\n  }\r\n};\r\n\r\nexport const getExchangeRate = (state) => state.rate;\r\nexport const getDataUrl = (state) => state.data;\r\nexport const getUpdatedData = (state) => state.updatedData;\r\n\r\n// Actions\r\nexport const EXCHANGE_RATE = \"EXCHANGE_RATE\";\r\nexport const ADD_FAV = \"ADD_FAV\";\r\nexport const DELETE_FAV = \"DELETE_FAV\";\r\nexport const FETCH_CURRENCY = \"GET_CURRENCY\";\r\nexport const LOAD_DATA = \"LOAD_DATA\";\r\nexport const UPDATE_DATA = \"UPDATE_DATA\";\r\nexport const FETCH_UPDATED_CURRENCY = \"FETCH_UPDATED_CURRENCY\";\r\n\r\nexport function addFavorite(text) {\r\n  return {\r\n    type: ADD_FAV,\r\n    payload: text,\r\n  };\r\n}\r\n\r\nexport function deleteFavorite(text) {\r\n  return {\r\n    type: DELETE_FAV,\r\n    payload: text,\r\n  };\r\n}\r\n\r\nexport function addExchangeRate(rate) {\r\n  return {\r\n    type: EXCHANGE_RATE,\r\n    payload: rate,\r\n  };\r\n}\r\n\r\nexport function fetchCurrency(data) {\r\n  return {\r\n    type: FETCH_CURRENCY,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function loadData() {\r\n  return {\r\n    type: LOAD_DATA,\r\n  };\r\n}\r\n\r\nexport function updateData(first, second) {\r\n  return {\r\n    type: UPDATE_DATA,\r\n    payload: {\r\n      from: first,\r\n      to: second,\r\n    },\r\n  };\r\n}\r\n\r\n// Reducers\r\n\r\nexport const exchangeRateReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case EXCHANGE_RATE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const favoriteReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_FAV:\r\n      return [...state, action.payload];\r\n    case DELETE_FAV:\r\n      return state.filter((item) => item !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  currencyTypes: [],\r\n};\r\n\r\nexport const currencyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENCY:\r\n      return { ...state, currencyTypes: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst updateState = {\r\n  from: \"EUR\",\r\n  to: \"CAD\",\r\n};\r\n\r\nexport const updateDataReducer = (state = updateState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_DATA:\r\n      return { from: action.payload.from, to: action.payload.to };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function fetchUpdatedCurrency(data) {\r\n  return {\r\n    type: FETCH_UPDATED_CURRENCY,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport const putUpdatedDataReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_UPDATED_CURRENCY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Saga\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(LOAD_DATA, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker() {\r\n  const data = yield call(fetchAvailableCurrency);\r\n  yield put(fetchCurrency(data));\r\n}\r\n\r\nfunction* fetchAvailableCurrency() {\r\n  return yield fetch(BASE_URL)\r\n    .then((response) => response.json())\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nexport function* workerUpdateData() {\r\n  const data = yield call(updateCurrency);\r\n  yield put(fetchUpdatedCurrency(data));\r\n}\r\n\r\nexport function* watchUpdateData() {\r\n  yield takeEvery(UPDATE_DATA, workerUpdateData);\r\n}\r\n\r\nfunction* updateCurrency() {\r\n  let { from, to } = yield select(getDataUrl);\r\n  console.log(`From ${from} To ${to}`);\r\n  if (from !== \"undefined\" && to) {\r\n    return yield fetch(`${BASE_URL}?base=${from}&symbols=${to}`)\r\n      .then((response) => response.json())\r\n      .catch((err) => console.log(err));\r\n  }\r\n}\r\n","export default {\r\n  home: \"/\",\r\n  currency: \"/currency\",\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/star.bbb7ece8.svg\";","import React from \"react\";\r\n\r\n// Components\r\nimport { CurrencyRow } from \"../../components\";\r\nimport { Title, Container } from \"../../styled\";\r\n\r\nexport function Convert() {\r\n  return (\r\n    <Container>\r\n      <Title>Convert</Title>\r\n      <CurrencyRow />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  addFavorite,\r\n  deleteFavorite,\r\n  getFavorites,\r\n  getRegularCurrency,\r\n  getNumberOfFavorites,\r\n} from \"../../redux/ducks/currency\";\r\n\r\n// Components\r\nimport { MainLoader, Empty } from \"../../components\";\r\nimport {\r\n  ListFavorite,\r\n  BtnFavorite,\r\n  BtnEmpty,\r\n  ItemFavorites,\r\n  ItemContainer,\r\n  Value,\r\n} from \"../../styled\";\r\n\r\nexport function CurrencyList() {\r\n  const dispatch = useDispatch();\r\n  const favorites = useSelector(getFavorites);\r\n  const regularCurrency = useSelector(getRegularCurrency);\r\n  const numberOfFavorites = useSelector(getNumberOfFavorites);\r\n\r\n  const toggleFavAction = (text) => {\r\n    if (!favorites.includes(text)) {\r\n      dispatch(addFavorite(text));\r\n    }\r\n\r\n    if (favorites.includes(text)) {\r\n      dispatch(deleteFavorite(text));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListFavorite favorite>\r\n        {numberOfFavorites > 0 ? (\r\n          favorites.map((item) => (\r\n            <ItemFavorites key={item}>\r\n              <ItemContainer>\r\n                <Value>{item}</Value>\r\n                <BtnFavorite\r\n                  type=\"button\"\r\n                  onClick={() => toggleFavAction(item)}\r\n                ></BtnFavorite>\r\n              </ItemContainer>\r\n            </ItemFavorites>\r\n          ))\r\n        ) : (\r\n          <Empty />\r\n        )}\r\n      </ListFavorite>\r\n      <ListFavorite>\r\n        {regularCurrency ? (\r\n          regularCurrency.map((item) => (\r\n            <ItemFavorites key={item}>\r\n              <ItemContainer>\r\n                <Value>{item}</Value>\r\n                <BtnEmpty\r\n                  type=\"button\"\r\n                  onClick={() => toggleFavAction(item)}\r\n                ></BtnEmpty>\r\n              </ItemContainer>\r\n            </ItemFavorites>\r\n          ))\r\n        ) : (\r\n          <MainLoader />\r\n        )}\r\n      </ListFavorite>\r\n    </>\r\n  );\r\n}\r\n\r\nCurrencyList.defaultProps = {\r\n  numberOfFavorites: 0,\r\n  favorites: [],\r\n};\r\n\r\nCurrencyList.propTypes = {\r\n  numberOfFavorites: PropTypes.number,\r\n  favorites: PropTypes.arrayOf(PropTypes.string),\r\n  regularCurrency: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  loadData,\r\n  getCurrencyArray,\r\n  getFromCurrency,\r\n  getToCurrency,\r\n  getExchangeRate,\r\n  updateData,\r\n  getUpdatedData,\r\n  addExchangeRate,\r\n} from \"../../redux/ducks/currency\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Components\r\nimport {\r\n  FormBox,\r\n  Option,\r\n  FormEqually,\r\n  FormCurrency,\r\n  FormControl,\r\n  FormSelect,\r\n} from \"../../styled\";\r\n\r\n// Styles\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport function CurrencyRow() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(loadData());\r\n  }, [dispatch]);\r\n\r\n  const currency = useSelector(getCurrencyArray);\r\n  const selectedFromCurrency = useSelector(getFromCurrency);\r\n  const selectedToCurrency = useSelector(getToCurrency);\r\n  const selectedExchangeRate = useSelector(getExchangeRate);\r\n  const updatedData = useSelector(getUpdatedData);\r\n  const [fromCurrency, setFromCurrency] = useState(selectedFromCurrency);\r\n  const [toCurrency, setToCurrency] = useState(selectedToCurrency);\r\n  const [exchangeRate, setExchangeRate] = useState(selectedExchangeRate);\r\n  const [amount, setAmount] = useState(1);\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\r\n  const firstExchange = useRef(exchangeRate);\r\n  console.log(firstExchange.current);\r\n\r\n  useEffect(() => {\r\n    setToCurrency(selectedToCurrency);\r\n  }, [selectedToCurrency]);\r\n\r\n  useEffect(() => {\r\n    if (updatedData.rates) {\r\n      setExchangeRate(updatedData.rates[toCurrency]);\r\n    }\r\n  }, [dispatch, toCurrency, updatedData.rates]);\r\n\r\n  useEffect(() => {\r\n    dispatch(addExchangeRate(firstExchange.current));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (fromCurrency && toCurrency) {\r\n      dispatch(updateData(fromCurrency, toCurrency));\r\n    }\r\n  }, [dispatch, fromCurrency, toCurrency]);\r\n\r\n  let fromAmount = null;\r\n  let toAmount = null;\r\n\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = (amount * exchangeRate).toFixed(1);\r\n  } else {\r\n    toAmount = amount;\r\n    fromAmount = (amount / exchangeRate).toFixed(1);\r\n  }\r\n\r\n  const handleFromAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(true);\r\n  };\r\n\r\n  const handleToAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(false);\r\n  };\r\n\r\n  console.log(exchangeRate);\r\n  console.log(updatedData);\r\n\r\n  return (\r\n    <Container>\r\n      <FormCurrency>\r\n        <FormBox>\r\n          <FormControl\r\n            type=\"number\"\r\n            value={fromAmount}\r\n            onChange={handleFromAmountChange}\r\n            className=\"Form__input\"\r\n          />\r\n          <FormSelect\r\n            as=\"select\"\r\n            name=\"from\"\r\n            value={fromCurrency}\r\n            onChange={(e) => setFromCurrency(e.target.value)}\r\n            className=\"Form__select\"\r\n          >\r\n            {currency &&\r\n              currency.map((item) => (\r\n                <Option key={item} value={item}>\r\n                  {item}\r\n                </Option>\r\n              ))}\r\n          </FormSelect>\r\n        </FormBox>\r\n        <FormEqually></FormEqually>\r\n        <FormBox>\r\n          <FormControl\r\n            type=\"number\"\r\n            value={toAmount}\r\n            onChange={handleToAmountChange}\r\n            className=\"Form__input\"\r\n          />\r\n          <FormSelect\r\n            as=\"select\"\r\n            value={toCurrency}\r\n            onChange={(e) => setToCurrency(e.target.value)}\r\n            className=\"Form__select\"\r\n          >\r\n            {currency &&\r\n              currency.map((item) => (\r\n                <Option key={item} value={item}>\r\n                  {item}\r\n                </Option>\r\n              ))}\r\n          </FormSelect>\r\n        </FormBox>\r\n      </FormCurrency>\r\n    </Container>\r\n  );\r\n}\r\n\r\nCurrencyRow.defaultProps = {\r\n  currency: [],\r\n  selectedFromCurrency: \"\",\r\n  selectedToCurrency: \"\",\r\n  selectedExchangeRate: 0,\r\n};\r\n\r\nCurrencyRow.propTypes = {\r\n  currency: PropTypes.arrayOf(PropTypes.string),\r\n  selectedFromCurrency: PropTypes.string,\r\n  selectedToCurrency: PropTypes.string,\r\n  selectedExchangeRate: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\n\r\nimport { EmptyFavorites } from \"../../styled\";\r\n\r\nexport const Empty = () => (\r\n  <EmptyFavorites>No favorite currencies</EmptyFavorites>\r\n);\r\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nimport { LoaderMain } from \"../../styled\";\n\nexport const MainLoader = () => (\n  <LoaderMain>\n    <Loader type=\"Oval\" color=\"#a6dbfb\" height={80} width={80} />\n  </LoaderMain>\n);\n","import React from \"react\";\r\nimport routes from \"../../routes\";\r\n\r\n// Components\r\nimport {\r\n  Header,\r\n  Nav,\r\n  NavigationList,\r\n  NavigationItems,\r\n  Logo,\r\n  NavLinks,\r\n} from \"../../styled\";\r\n\r\nexport function Navigation() {\r\n  return (\r\n    <Header>\r\n      <Nav>\r\n        <Logo />\r\n        <NavigationList>\r\n          <NavigationItems>\r\n            <NavLinks to={routes.home}>Home</NavLinks>\r\n          </NavigationItems>\r\n          <NavigationItems>\r\n            <NavLinks to={routes.currency}>Convert</NavLinks>\r\n          </NavigationItems>\r\n        </NavigationList>\r\n      </Nav>\r\n    </Header>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/starEmpty.2530b412.svg\";","module.exports = __webpack_public_path__ + \"static/media/equal.ef66f09e.svg\";","module.exports = __webpack_public_path__ + \"static/media/return-of-investment.22eaf005.svg\";","import styled from \"styled-components\";\r\nimport star from \"../images/starEmpty.svg\";\r\n\r\nexport const BtnEmpty = styled.section`\r\n  width: 20px;\r\n  height: 20px;\r\n  background-image: url(${star});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport star from \"../images/star.svg\";\r\n\r\nexport const BtnFavorite = styled.section`\r\n  width: 20px;\r\n  height: 20px;\r\n  background-image: url(${star});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n  width: 80%;\r\n  margin: auto;\r\n  margin-top: 100px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const EmptyFavorites = styled.li`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-weight: 800;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport star from \"../images/star.svg\";\r\n\r\nexport const Favorite = styled.div`\r\n  margin: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 22px;\r\n  margin-top: 20px;\r\n  width: 40px;\r\n  height: 40px;\r\n  background-image: url(${star});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  color: ${(props) => props.theme.colors.white};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormBox = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport const FormControl = styled(Form.Control)`\r\n  width: 75%;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport const FormCurrency = styled(Form)`\r\n  margin: auto;\r\n  width: 50%;\r\n  height: 200px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport equally from \"../images/equal.svg\";\r\n\r\nexport const FormEqually = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-image: url(${equally});\r\n  text-align: center;\r\n  font-size: 30px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport const FormSelect = styled(Form.Control)`\r\n  width: 20%;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.header`\r\n  width: 100%;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ItemContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 17%;\r\n  margin: auto;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ItemFavorites = styled.li`\r\n  width: 80%;\r\n  margin: auto;\r\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border-radius: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ListFavorite = styled.ul`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  width: 60%;\r\n  text-align: center;\r\n  padding: 20px;\r\n  padding-bottom: 30px;\r\n  border-bottom: ${(props) => props.favorite && \"4px dashed #ffc107\"};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoaderMain = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  margin-top: 100px;\r\n  text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport myImage from \"../images/return-of-investment.svg\";\r\n\r\nexport const Logo = styled.div`\r\n  width: 45px;\r\n  height: 45px;\r\n  background-image: url(${myImage});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainTitle = styled.h1`\r\n  text-align: center;\r\n  font-size: 34px;\r\n  font-weight: 700;\r\n  color: ${(props) => props.theme.colors.hover};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Nav = styled.nav`\r\n  width: 80%;\r\n  height: 70%;\r\n  margin: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const NavLinks = styled(NavLink)`\r\n  font-size: 24px;\r\n  color: ${(props) => props.theme.colors.main};\r\n  text-decoration: none;\r\n  font-weight: 700;\r\n  transition: 250ms color linear;\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.hover};\r\n    font-weight: 700;\r\n    text-decoration: none;\r\n    font-size: 24px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavigationItems = styled.li``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavigationList = styled.ul`\r\n  display: flex;\r\n  width: 300px;\r\n  justify-content: space-around;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Option = styled.option``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: ${(props) => props.theme.colors.hover};\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TitleHome = styled.h2`\r\n  font-size: 28px;\r\n  text-align: center;\r\n  margin-top: 30px;\r\n  color: ${(props) => props.theme.colors.main};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Value = styled.p`\r\n  font-size: 18px;\r\n`;\r\n","import React, { Suspense, lazy } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Components\nimport { Navigation, MainLoader } from \"./components\";\n\n// Views\nconst Home = lazy(() =>\n  import(\"./views/Home/Home\" /* webpackChunkName: \"home-page\" */)\n);\nconst Currency = lazy(() =>\n  import(\"./views/Currency/Currency\" /* webpackChunkName: \"currency-page\" */)\n);\n\nexport default function App() {\n  return (\n    <>\n      <Navigation />\n      <Suspense fallback={<MainLoader />}>\n        <Switch>\n          <Route path={routes.home} exact component={Home} />\n          <Route path={routes.currency} component={Currency} />\n          <Redirect to={routes.home} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport {\r\n  exchangeRateReducer,\r\n  updateDataReducer,\r\n  favoriteReducer,\r\n  currencyReducer,\r\n  sagaWatcher,\r\n  putUpdatedDataReducer,\r\n  watchUpdateData,\r\n} from \"./ducks/currency\";\r\nconst saga = createSagaMiddleware();\r\n\r\nconst persistConfig = {\r\n  key: \"favoritesList\",\r\n  storage,\r\n  blacklist: [\"currency\", \"data\", \"updatedData\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n  saga,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  currency: currencyReducer,\r\n  favorite: favoriteReducer,\r\n  data: updateDataReducer,\r\n  rate: exchangeRateReducer,\r\n  updatedData: putUpdatedDataReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nsaga.run(sagaWatcher);\r\nsaga.run(watchUpdateData);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  margin-top: 0;\r\n}\r\n\r\np {\r\nmargin: 0;\r\n}\r\n\r\nul {\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style-type: none;\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nimport GlobalStyle from \"./styles/globalStyles\";\nimport Theme from \"./styles/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <ThemeProvider theme={Theme}>\n            <GlobalStyle />\n            <App />\n          </ThemeProvider>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export default {\r\n  colors: {\r\n    main: \"#a6dbfb\",\r\n    text: \"#0e2b3c\",\r\n    dark: \"#56809b\",\r\n    hover: \"#67a030\",\r\n    white: \"#ffffff\",\r\n  },\r\n};\r\n"],"sourceRoot":""}