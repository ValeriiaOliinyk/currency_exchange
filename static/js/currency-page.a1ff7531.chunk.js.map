{"version":3,"sources":["images/equal.svg","components/styled/FormBox.js","components/styled/Option.js","components/styled/FormEqually.js","components/styled/FormCurrency.js","components/styled/FormControl.js","components/styled/FormSelect.js","components/CurrencyRow/CurrencyRow.js","components/styled/Title.js","components/Convert/Convert.js","views/Currency/Currency.js","redux/currency/currency-selectors.js","components/styled/Container.js"],"names":["module","exports","styled","div","option","equally","Form","Control","CurrencyRow","dispatch","useDispatch","useEffect","loadData","currency","useSelector","getCurrencyArray","selectedFromCurrency","getFromCurrency","selectedToCurrency","getToCurrency","selectedExchangeRate","getExchangeRate","useState","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","axios","then","data","addExchangeRate","rates","catch","error","console","log","fromAmount","toAmount","toFixed","Container","FormCurrency","FormBox","FormControl","type","value","onChange","e","target","className","FormSelect","as","map","item","Option","key","FormEqually","defaultProps","h2","props","theme","colors","hover","Convert","Title","Currency","getCurrency","state","currencyTypes","base","Object","keys","getFavorites","favorite","getNumberOfFavorites","length","getRegularCurrency","favorites","filter","n","indexOf","rate","section"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,mC,iRCE5BC,UAAOC,IAAtB,K,qECAeD,UAAOE,OAAtB,K,oMCCeF,UAAOC,IAAtB,IAG0BE,K,0TCHXH,kBAAOI,IAAPJ,CAAf,K,sFCAeA,kBAAOI,IAAKC,QAAZL,CAAf,K,sFCAeA,kBAAOI,IAAKC,QAAZL,CAAf,K,SCyBMM,EAAc,WAClB,IAAMC,EAAWC,cACjBC,qBAAU,WACRF,EAASG,iBACR,CAACH,IAEJ,IAAMI,EAAWC,YAAYC,KACvBC,EAAuBF,YAAYG,KACnCC,EAAqBJ,YAAYK,KACjCC,EAAuBN,YAAYO,KATjB,EAWgBC,mBAASN,GAXzB,mBAWjBO,EAXiB,KAWHC,EAXG,OAYYF,mBAASJ,GAZrB,mBAYjBO,EAZiB,KAYLC,EAZK,OAagBJ,mBAASF,GAbzB,mBAajBO,EAbiB,KAaHC,EAbG,OAcIN,mBAAS,GAdb,mBAcjBO,EAdiB,KAcTC,EAdS,OAegCR,oBAAS,GAfzC,mBAejBS,EAfiB,KAeKC,EAfL,KAiBxBrB,qBAAU,WACRe,EAAcR,KACb,CAACA,IAEJP,qBAAU,WACRiB,EAAgBR,KACf,CAACA,IAEJT,qBAAU,WAEJY,GAAgBE,GAClBQ,IAAM,GAAD,OA9BM,yCA8BN,iBAAqBV,EAArB,oBAA6CE,IAC/CS,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAc1B,EAAS2B,YAAgBD,EAAKE,MAAMZ,QACvDa,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAGjC,CAAC9B,EAAUc,EAAcE,IAE5B,IAAIiB,EAAa,KACbC,EAAW,KAEXZ,GACFW,EAAab,EACbc,GAAYd,EAASF,GAAciB,QAAQ,KAE3CD,EAAWd,EACXa,GAAcb,EAASF,GAAciB,QAAQ,IAe/C,OAFAJ,QAAQC,IAAId,GAGV,kBAACkB,EAAA,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,CACEC,KAAK,SACLC,MAAOR,EACPS,SAnBqB,SAACC,GAC9BtB,EAAUsB,EAAEC,OAAOH,OACnBlB,GAAwB,IAkBhBsB,UAAU,gBAEZ,kBAACC,EAAD,CACEC,GAAG,SACHN,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAO5B,EAAgB4B,EAAEC,OAAOH,QAC1CI,UAAU,gBAETzC,GACCA,EAAS4C,KAAI,SAACC,GAAD,OACX,kBAACC,EAAD,CAAQC,IAAKF,EAAMR,MAAOQ,GACvBA,QAKX,kBAACG,EAAD,MACA,kBAACd,EAAD,KACE,kBAACC,EAAD,CACEC,KAAK,SACLC,MAAOP,EACPQ,SApCmB,SAACC,GAC5BtB,EAAUsB,EAAEC,OAAOH,OACnBlB,GAAwB,IAmChBsB,UAAU,gBAEZ,kBAACC,EAAD,CACEC,GAAG,SACHN,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO1B,EAAc0B,EAAEC,OAAOH,QACxCI,UAAU,gBAETzC,GACCA,EAAS4C,KAAI,SAACC,GAAD,OACX,kBAACC,EAAD,CAAQC,IAAKF,EAAMR,MAAOQ,GACvBA,WAUnBlD,EAAYsD,aAAe,CACzBjD,SAAU,GACVG,qBAAsB,GACtBE,mBAAoB,GACpBE,qBAAsB,GAUTZ,Q,8KCrJAN,UAAO6D,GAAtB,KAGW,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,S,QCW1BC,EATC,WACd,OACE,kBAAC,IAAD,KACE,kBAACC,EAAD,gBACA,kBAAC,EAAD,QCFSC,UAJE,WACf,OAAO,kBAAC,EAAD,Q,0RCNIC,EAAc,SAACC,GAAD,OAAWA,EAAM3D,SAAS4D,eAExC1D,EAAmB,SAACyD,GAC/B,IAAM3D,EAAW0D,EAAYC,GAC7B,GAAI3D,EAASwB,OAASxB,EAAS6D,KAC7B,MAAM,CAAE7D,EAAS6D,MAAjB,mBAA0BC,OAAOC,KAAK/D,EAASwB,UAItCpB,EAAkB,SAACuD,GAC9B,IAAM3D,EAAW0D,EAAYC,GAC7B,GAAI3D,EAAS6D,KACX,OAAO7D,EAAS6D,MAIPvD,EAAgB,SAACqD,GAC5B,IAAM3D,EAAW0D,EAAYC,GAC7B,GAAI3D,EAASwB,MACX,OAAOsC,OAAOC,KAAK/D,EAASwB,OAAO,IAI1BwC,EAAe,SAACL,GAAD,OAAWA,EAAMM,UAChCC,EAAuB,SAACP,GAAD,OAAWA,EAAMM,SAASE,QACjDC,EAAqB,SAACT,GACjC,IAAM3D,EAAWE,EAAiByD,GAC5BU,EAAYL,EAAaL,GAC/B,GAAI3D,EACF,OAAOA,EAASsE,QAAO,SAACC,GAAD,OAAiC,IAA1BF,EAAUG,QAAQD,OAIvC/D,EAAkB,SAACmD,GAAD,OAAWA,EAAMc,O,+KC/BjCpF,QAAOqF,QAAtB","file":"static/js/currency-page.a1ff7531.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/equal.ef66f09e.svg\";","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.option``;\r\n","import styled from \"styled-components\";\r\nimport equally from \"../../images/equal.svg\";\r\n\r\nexport default styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-image: url(${equally});\r\n  text-align: center;\r\n  font-size: 30px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport default styled(Form)`\r\n  margin: auto;\r\n  width: 50%;\r\n  height: 200px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport default styled(Form.Control)`\r\n  width: 75%;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport default styled(Form.Control)`\r\n  width: 20%;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getCurrencyArray,\r\n  getFromCurrency,\r\n  getToCurrency,\r\n  getExchangeRate,\r\n  // getUpdatedData,\r\n} from \"../../redux/currency/currency-selectors\";\r\nimport { addExchangeRate } from \"../../redux/currency/currency-reducers\";\r\n// import { updateData } from \"../../redux/currency/dataUrl-reducer\";\r\nimport { loadData } from \"../../redux/currency/fetch-reducer\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\n// Components\r\nimport FormBox from \"../styled/FormBox\";\r\nimport Option from \"../styled/Option\";\r\nimport FormEqually from \"../styled/FormEqually\";\r\nimport FormCurrency from \"../styled/FormCurrency\";\r\nimport FormControl from \"../styled/FormControl\";\r\nimport FormSelect from \"../styled/FormSelect\";\r\n\r\n// Styles\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\r\n\r\nconst CurrencyRow = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(loadData());\r\n  }, [dispatch]);\r\n\r\n  const currency = useSelector(getCurrencyArray);\r\n  const selectedFromCurrency = useSelector(getFromCurrency);\r\n  const selectedToCurrency = useSelector(getToCurrency);\r\n  const selectedExchangeRate = useSelector(getExchangeRate);\r\n  // const updatedData = useSelector(getUpdatedData);\r\n  const [fromCurrency, setFromCurrency] = useState(selectedFromCurrency);\r\n  const [toCurrency, setToCurrency] = useState(selectedToCurrency);\r\n  const [exchangeRate, setExchangeRate] = useState(selectedExchangeRate);\r\n  const [amount, setAmount] = useState(1);\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setToCurrency(selectedToCurrency);\r\n  }, [selectedToCurrency]);\r\n\r\n  useEffect(() => {\r\n    setExchangeRate(selectedExchangeRate);\r\n  }, [selectedExchangeRate]);\r\n\r\n  useEffect(() => {\r\n    // dispatch(updateData(fromCurrency, toCurrency));\r\n    if (fromCurrency && toCurrency) {\r\n      axios(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\r\n        .then(({ data }) => dispatch(addExchangeRate(data.rates[toCurrency])))\r\n        .catch((error) => console.log(error));\r\n      // dispatch(addExchangeRate(updatedData.rates[toCurrency]));\r\n    }\r\n  }, [dispatch, fromCurrency, toCurrency]);\r\n\r\n  let fromAmount = null;\r\n  let toAmount = null;\r\n\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = (amount * exchangeRate).toFixed(1);\r\n  } else {\r\n    toAmount = amount;\r\n    fromAmount = (amount / exchangeRate).toFixed(1);\r\n  }\r\n\r\n  const handleFromAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(true);\r\n  };\r\n\r\n  const handleToAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(false);\r\n  };\r\n\r\n  console.log(exchangeRate);\r\n\r\n  return (\r\n    <Container>\r\n      <FormCurrency>\r\n        <FormBox>\r\n          <FormControl\r\n            type=\"number\"\r\n            value={fromAmount}\r\n            onChange={handleFromAmountChange}\r\n            className=\"Form__input\"\r\n          />\r\n          <FormSelect\r\n            as=\"select\"\r\n            value={fromCurrency}\r\n            onChange={(e) => setFromCurrency(e.target.value)}\r\n            className=\"Form__select\"\r\n          >\r\n            {currency &&\r\n              currency.map((item) => (\r\n                <Option key={item} value={item}>\r\n                  {item}\r\n                </Option>\r\n              ))}\r\n          </FormSelect>\r\n        </FormBox>\r\n        <FormEqually></FormEqually>\r\n        <FormBox>\r\n          <FormControl\r\n            type=\"number\"\r\n            value={toAmount}\r\n            onChange={handleToAmountChange}\r\n            className=\"Form__input\"\r\n          />\r\n          <FormSelect\r\n            as=\"select\"\r\n            value={toCurrency}\r\n            onChange={(e) => setToCurrency(e.target.value)}\r\n            className=\"Form__select\"\r\n          >\r\n            {currency &&\r\n              currency.map((item) => (\r\n                <Option key={item} value={item}>\r\n                  {item}\r\n                </Option>\r\n              ))}\r\n          </FormSelect>\r\n        </FormBox>\r\n      </FormCurrency>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCurrencyRow.defaultProps = {\r\n  currency: [],\r\n  selectedFromCurrency: \"\",\r\n  selectedToCurrency: \"\",\r\n  selectedExchangeRate: 0,\r\n};\r\n\r\nCurrencyRow.propTypes = {\r\n  currency: PropTypes.arrayOf(PropTypes.string),\r\n  selectedFromCurrency: PropTypes.string,\r\n  selectedToCurrency: PropTypes.string,\r\n  selectedExchangeRate: PropTypes.number,\r\n};\r\n\r\nexport default CurrencyRow;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: ${(props) => props.theme.colors.hover};\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n`;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport CurrencyRow from \"../CurrencyRow/CurrencyRow\";\r\nimport Title from \"../styled/Title\";\r\nimport Container from \"../styled/Container\";\r\n\r\nconst Convert = () => {\r\n  return (\r\n    <Container>\r\n      <Title>Convert</Title>\r\n      <CurrencyRow />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Convert;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Convert from \"../../components/Convert/Convert\";\r\n\r\nconst Currency = () => {\r\n  return <Convert />;\r\n};\r\n\r\nexport default Currency;\r\n","export const getCurrency = (state) => state.currency.currencyTypes;\r\n\r\nexport const getCurrencyArray = (state) => {\r\n  const currency = getCurrency(state);\r\n  if (currency.rates && currency.base) {\r\n    return [currency.base, ...Object.keys(currency.rates)];\r\n  }\r\n};\r\n\r\nexport const getFromCurrency = (state) => {\r\n  const currency = getCurrency(state);\r\n  if (currency.base) {\r\n    return currency.base;\r\n  }\r\n};\r\n\r\nexport const getToCurrency = (state) => {\r\n  const currency = getCurrency(state);\r\n  if (currency.rates) {\r\n    return Object.keys(currency.rates)[0];\r\n  }\r\n};\r\n\r\nexport const getFavorites = (state) => state.favorite;\r\nexport const getNumberOfFavorites = (state) => state.favorite.length;\r\nexport const getRegularCurrency = (state) => {\r\n  const currency = getCurrencyArray(state);\r\n  const favorites = getFavorites(state);\r\n  if (currency) {\r\n    return currency.filter((n) => favorites.indexOf(n) === -1);\r\n  }\r\n};\r\n\r\nexport const getExchangeRate = (state) => state.rate;\r\nexport const getDataUrl = (state) => state.data;\r\nexport const getUpdatedData = (state) => state.updatedData;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.section`\r\n  width: 80%;\r\n  margin: auto;\r\n  margin-top: 100px;\r\n`;\r\n"],"sourceRoot":""}