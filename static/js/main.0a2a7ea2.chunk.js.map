{"version":3,"sources":["redux/currency/currency-reducers.js","components/MainLoader/MainLoader.js","routes.js","components/Navigation/Navigation.js","App.js","redux/store.js","index.js"],"names":["sagaWatcher","sagaWorker","fetchCurrency","data","type","payload","loadData","addFavorite","text","deleteFavorite","updateData","fromCurrency","toCurrency","initialState","currencyTypes","currencyReducer","state","action","favoriteReducer","filter","item","updateDataReducer","takeEvery","call","fetchAvailableCurrency","put","fetch","then","response","json","MainLoader","className","color","height","width","Navigation","activeClassName","to","routes","Home","lazy","Currency","App","fallback","path","exact","component","saga","createSagaMiddleware","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","combineReducers","currency","favorite","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","run","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0a2a7ea2.chunk.js","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\r\n\r\nexport const FETCH_CURRENCY = \"GET_CURRENCY\";\r\nexport const LOAD_DATA = \"LOAD_DATA\";\r\nexport const ADD_FAV = \"ADD_FAV\";\r\nexport const DELETE_FAV = \"DELETE_FAV\";\r\nexport const UPDATE_DATA = \"UPDATE_DATA\";\r\n\r\n// Actions\r\n\r\nexport function fetchCurrency(data) {\r\n  return {\r\n    type: FETCH_CURRENCY,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function loadData() {\r\n  return {\r\n    type: LOAD_DATA,\r\n  };\r\n}\r\n\r\nexport function addFavorite(text) {\r\n  return {\r\n    type: ADD_FAV,\r\n    payload: text,\r\n  };\r\n}\r\n\r\nexport function deleteFavorite(text) {\r\n  return {\r\n    type: DELETE_FAV,\r\n    payload: text,\r\n  };\r\n}\r\n\r\nexport function updateData(fromCurrency, toCurrency) {\r\n  return {\r\n    type: UPDATE_DATA,\r\n    payload: { fromCurrency, toCurrency },\r\n  };\r\n}\r\n\r\n// Reducers\r\n\r\nconst initialState = {\r\n  currencyTypes: [],\r\n};\r\n\r\nexport const currencyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENCY:\r\n      return { ...state, currencyTypes: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const favoriteReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_FAV:\r\n      return [...state, action.payload];\r\n    case DELETE_FAV:\r\n      return state.filter((item) => item !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateDataReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_DATA:\r\n      return [action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Saga\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(LOAD_DATA, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker() {\r\n  const data = yield call(fetchAvailableCurrency);\r\n  yield put(fetchCurrency(data));\r\n}\r\n\r\nfunction fetchAvailableCurrency() {\r\n  return fetch(BASE_URL).then((response) => response.json());\r\n}\r\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport './MainLoader.scss';\n\nconst MainLoader = () => (\n  <div className=\"Loader\">\n    <Loader type=\"Oval\" color=\"#37474f\" height={80} width={80} />\n  </div>\n);\n\nexport default MainLoader;\n","export default {\r\n  home: \"/\",\r\n  currency: \"/currency\",\r\n};\r\n","import React from \"react\";\r\nimport routes from \"../../routes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Navigation.scss\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <ul className=\"Navigation__list\">\r\n          <li>\r\n            <NavLink\r\n              className=\"Navigation__link\"\r\n              activeClassName=\"Navigation__active\"\r\n              to={routes.home}\r\n            >\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              className=\"Navigation__link\"\r\n              activeClassName=\"Navigation__active\"\r\n              to={routes.currency}\r\n            >\r\n              Convert\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Suspense, lazy } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport \"./styles/base.scss\";\n\n// Components\nimport Navigation from \"./components/Navigation/Navigation\";\nimport MainLoader from \"./components/MainLoader/MainLoader\";\n\n// Views\nconst Home = lazy(() =>\n  import(\"./views/Home/Home\" /* webpackChunkName: \"home-page\" */)\n);\nconst Currency = lazy(() =>\n  import(\"./views/Currency/Currency\" /* webpackChunkName: \"currency-page\" */)\n);\n\nconst App = () => {\n  return (\n    <>\n      <Navigation />\n      <Suspense fallback={<MainLoader />}>\n        <Switch>\n          <Route path={routes.home} exact component={Home} />\n          <Route path={routes.currency} component={Currency} />\n          <Redirect to={routes.home} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default App;\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport {\r\n  currencyReducer,\r\n  favoriteReducer,\r\n  updateDataReducer,\r\n} from \"./currency/currency-reducers\";\r\nimport { sagaWatcher } from \"./currency/currency-reducers\";\r\n\r\nconst saga = createSagaMiddleware();\r\n\r\nconst persistConfig = {\r\n  key: \"favoritesList\",\r\n  storage,\r\n  blacklist: [\"currency\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n  saga,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  currency: currencyReducer,\r\n  favorite: favoriteReducer,\r\n  data: updateDataReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nsaga.run(sagaWatcher);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}