{"version":3,"sources":["api/service.ts","redux/ducks/currency.ts","styles/theme.ts","App.tsx","redux/store.ts","styles/globalStyles.ts","index.tsx","routes.ts","components/styled/BtnEmpty.ts","components/styled/BtnFavorite.ts","components/styled/Container.ts","components/styled/EmptyFavorites.ts","components/styled/Favorite.ts","components/styled/FormBox.ts","components/styled/FormControl.ts","components/styled/FormCurrency.ts","components/styled/FormEqually.ts","components/styled/FormSelect.ts","components/styled/Header.ts","components/styled/ItemContainer.ts","components/styled/ItemFavorites.ts","components/styled/ListFavorite.ts","components/styled/LoaderMain.ts","components/styled/Logo.ts","components/styled/Main.ts","components/styled/MainTitle.ts","components/styled/Nav.ts","components/styled/NavLink.ts","components/styled/NavigationItems.ts","components/styled/NavigationList.ts","components/styled/Option.ts","components/styled/Title.ts","components/styled/TitleHome.ts","components/styled/Value.ts","components/styled/ErrorMessage.ts","components/styled/Image.ts","helpers/validation.ts","components/CurrencyRow.tsx","components/Convert.tsx","components/CurrencyList.tsx","components/Empty.tsx","components/MainLoader.tsx","components/Navigation.tsx"],"names":["BASE_URL","apiService","getData","fetch","then","response","json","catch","err","console","log","getUpdatedDatas","from","to","sagaWatcher","sagaWorker","watchUpdateData","workerUpdateData","getCurrency","state","currency","getCurrencyArray","createSelector","rates","base","Object","keys","getFromCurrency","getToCurrency","getFavorites","favorite","getNumberOfFavorites","length","getRegularCurrency","favorites","filter","item","indexOf","getExchangeRate","rate","getDataUrl","data","getUpdatedData","updatedData","addFavorite","text","type","payload","deleteFavorite","addExchangeRate","loadData","updateData","first","second","exchangeRateReducer","action","favoriteReducer","currencyReducer","updateState","updateDataReducer","putUpdatedDataReducer","takeEvery","call","put","select","colors","main","dark","hover","white","red","black","transparent","breakpoints","mobileL","tablet","Home","lazy","Currency","App","theme","Theme","fallback","path","routes","home","exact","component","saga","createSagaMiddleware","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","run","persistor","persistStore","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","loading","document","getElementById","BtnEmpty","styled","section","BtnFavorite","Container","EmptyFavorites","li","props","Favorite","div","FormBox","FormControl","Field","FormCurrency","Form","FormSelect","Control","Header","header","ItemContainer","ItemFavorites","ListFavorite","ul","LoaderMain","Logo","Main","MainTitle","h1","Nav","nav","NavLinks","NavLink","NavigationItems","NavigationList","Option","option","Title","h2","TitleHome","Value","p","ErrorMessage","Image","img","validationSchema","Yup","shape","fromAmount","required","toAmount","CurrencyRow","dispatch","useDispatch","useEffect","useSelector","selectedFromCurrency","selectedToCurrency","selectedExchangeRate","useState","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","firstExchange","useRef","current","enableReinitialize","initialValues","toFixed","onSubmit","values","errors","touched","name","value","onChange","e","target","as","map","src","alt","Convert","CurrencyList","regularCurrency","numberOfFavorites","toggleFavAction","includes","className","onClick","defaultProps","Empty","MainLoader","color","height","width","Navigation"],"mappings":"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","file":"static/js/main.35b8f69b.chunk.js","sourcesContent":["const BASE_URL = \"https://api.exchangeratesapi.io/latest\";\r\n\r\nclass ApiService {\r\n  getData = () =>\r\n    fetch(BASE_URL)\r\n      .then((response) => response.json())\r\n      .catch((err) => console.log(err));\r\n\r\n  getUpdatedDatas = (from: string, to: string) =>\r\n    fetch(`${BASE_URL}?base=${from}&symbols=${to}`)\r\n      .then((response) => response.json())\r\n      .catch((err) => console.log(err));\r\n}\r\n\r\nexport const apiService = new ApiService();\r\n","import { call, put, takeEvery, select } from \"redux-saga/effects\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { AppStateType } from \"../store\";\r\nimport { CurrencyTypes } from \"../../helpers/interfaces\";\r\nimport { apiService } from \"../../api/service\";\r\n\r\n// Selectors\r\n\r\nexport const getCurrency = (state: AppStateType) => state.currency;\r\n\r\nexport const getCurrencyArray = createSelector(\r\n  [getCurrency],\r\n  (currency: CurrencyTypes) => {\r\n    if (currency.rates && currency.base) {\r\n      return [currency.base, ...Object.keys(currency.rates)];\r\n    }\r\n  }\r\n);\r\n\r\nexport const getFromCurrency = createSelector(\r\n  [getCurrency],\r\n  (currency: CurrencyTypes) => {\r\n    if (currency.base) {\r\n      return currency.base;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getToCurrency = createSelector(\r\n  [getCurrency],\r\n  (currency: CurrencyTypes) => {\r\n    if (currency.rates) {\r\n      return Object.keys(currency.rates)[0];\r\n    }\r\n  }\r\n);\r\n\r\nexport const getFavorites = (state: AppStateType) => state.favorite;\r\n\r\nexport const getNumberOfFavorites = (state: AppStateType) =>\r\n  state.favorite.length;\r\n\r\nexport const getRegularCurrency = createSelector(\r\n  [getCurrencyArray, getFavorites],\r\n  (currency: Array<string> | undefined, favorites: Array<string>) => {\r\n    if (currency) {\r\n      return currency.filter((item: string) => favorites.indexOf(item) === -1);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getExchangeRate = (state: AppStateType) => state.rate;\r\nexport const getDataUrl = (state: AppStateType) => state.data;\r\nexport const getUpdatedData = (state: AppStateType) => state.updatedData;\r\n\r\n// Actions\r\n\r\nexport const EXCHANGE_RATE = \"EXCHANGE_RATE\";\r\nexport const ADD_FAV = \"ADD_FAV\";\r\nexport const DELETE_FAV = \"DELETE_FAV\";\r\nexport const FETCH_CURRENCY = \"FETCH_CURRENCY\";\r\nexport const LOAD_DATA = \"LOAD_DATA\";\r\nexport const UPDATE_DATA = \"UPDATE_DATA\";\r\nexport const FETCH_UPDATED_CURRENCY = \"FETCH_UPDATED_CURRENCY\";\r\n\r\ntype AddFavoriteActionType = {\r\n  type: typeof ADD_FAV;\r\n  payload: string;\r\n};\r\n\r\nexport function addFavorite(text: string): AddFavoriteActionType {\r\n  return {\r\n    type: ADD_FAV,\r\n    payload: text,\r\n  };\r\n}\r\n\r\ntype DeleteFavoriteActionType = {\r\n  type: typeof DELETE_FAV;\r\n  payload: string;\r\n};\r\n\r\nexport function deleteFavorite(text: string): DeleteFavoriteActionType {\r\n  return {\r\n    type: DELETE_FAV,\r\n    payload: text,\r\n  };\r\n}\r\n\r\ntype AddExchangeRateActionType = {\r\n  type: typeof EXCHANGE_RATE;\r\n  payload: number;\r\n};\r\n\r\nexport function addExchangeRate(rate: number): AddExchangeRateActionType {\r\n  return {\r\n    type: EXCHANGE_RATE,\r\n    payload: rate,\r\n  };\r\n}\r\n\r\ntype FetchCurrencyActionType = {\r\n  type: typeof FETCH_CURRENCY;\r\n  payload?: object;\r\n};\r\n\r\nexport function getData(data: object): FetchCurrencyActionType {\r\n  return {\r\n    type: FETCH_CURRENCY,\r\n    payload: data,\r\n  };\r\n}\r\n\r\ntype LoadDataActionType = {\r\n  type: typeof LOAD_DATA;\r\n};\r\n\r\nexport function loadData(): LoadDataActionType {\r\n  return {\r\n    type: LOAD_DATA,\r\n  };\r\n}\r\n\r\ntype SetPayloadTypesUpdateData = {\r\n  from: string;\r\n  to: string;\r\n};\r\n\r\ntype UpdateDataActionType = {\r\n  type: typeof UPDATE_DATA;\r\n  payload: SetPayloadTypesUpdateData;\r\n};\r\n\r\nexport function updateData(\r\n  first: string,\r\n  second: string\r\n): UpdateDataActionType {\r\n  return {\r\n    type: UPDATE_DATA,\r\n    payload: {\r\n      from: first,\r\n      to: second,\r\n    },\r\n  };\r\n}\r\n\r\ntype FetchUpdatedCurrencyActionType = {\r\n  type: typeof FETCH_UPDATED_CURRENCY;\r\n  payload: object;\r\n};\r\n\r\nexport function getUpdatedDatas(data: object): FetchUpdatedCurrencyActionType {\r\n  return {\r\n    type: FETCH_UPDATED_CURRENCY,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Reducers\r\n\r\nexport const exchangeRateReducer = (\r\n  state: number = 0,\r\n  action: AddExchangeRateActionType\r\n) => {\r\n  switch (action.type) {\r\n    case EXCHANGE_RATE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const favoriteReducer = (\r\n  state: Array<string> = [],\r\n  action: AddFavoriteActionType | DeleteFavoriteActionType\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_FAV:\r\n      return [...state, action.payload];\r\n    case DELETE_FAV:\r\n      return state.filter((item) => item !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currencyReducer = (\r\n  state: Array<string> = [],\r\n  action: FetchCurrencyActionType\r\n) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENCY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype UpdateStateType = {\r\n  from: string;\r\n  to: string;\r\n};\r\n\r\nconst updateState: UpdateStateType = {\r\n  from: \"EUR\",\r\n  to: \"CAD\",\r\n};\r\n\r\nexport const updateDataReducer = (\r\n  state = updateState,\r\n  action: UpdateDataActionType\r\n) => {\r\n  switch (action.type) {\r\n    case UPDATE_DATA:\r\n      return { from: action.payload.from, to: action.payload.to };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const putUpdatedDataReducer = (\r\n  state: Array<string> = [],\r\n  action: FetchUpdatedCurrencyActionType\r\n) => {\r\n  switch (action.type) {\r\n    case FETCH_UPDATED_CURRENCY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Saga\r\n\r\nexport function* sagaWatcher(): Generator<object> {\r\n  yield takeEvery(LOAD_DATA, sagaWorker);\r\n}\r\n\r\nexport function* sagaWorker() {\r\n  const data = yield call(apiService.getData);\r\n  yield put(getData(data));\r\n}\r\n\r\nexport function* watchUpdateData(): Generator<object> {\r\n  yield takeEvery(UPDATE_DATA, workerUpdateData);\r\n}\r\n\r\nexport function* workerUpdateData() {\r\n  try {\r\n    let { from, to } = yield select(getDataUrl);\r\n    let data = yield call(() => apiService.getUpdatedDatas(from, to));\r\n    yield put(getUpdatedDatas(data));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n","export default {\r\n  colors: {\r\n    main: \"#a6dbfb\",\r\n    text: \"#0e2b3c\",\r\n    dark: \"#56809b\",\r\n    hover: \"#67a030\",\r\n    white: \"#ffffff\",\r\n    red: \"#800000\",\r\n    black: \"#000000\",\r\n    transparent: \"#ffffff00\",\r\n  },\r\n\r\n  breakpoints: {\r\n    mobileL: `screen and (max-width: 425px)`,\r\n    tablet: `screen and (max-width: 768px)`,\r\n  },\r\n};\r\n","import React, { Suspense, lazy } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport routes from \"./routes\";\n\nimport Theme from \"./styles/theme\";\n\n// Components\nimport { Navigation, MainLoader } from \"./components\";\n\n// Views\nconst Home = lazy(\n  () => import(\"./pages/Home\" /* webpackChunkName: \"home-page\" */)\n);\nconst Currency = lazy(\n  () => import(\"./pages/Currency\" /* webpackChunkName: \"currency-page\" */)\n);\n\nexport default function App() {\n  return (\n    <>\n      <ThemeProvider theme={Theme}>\n        <BrowserRouter>\n          <Navigation />\n          <Suspense fallback={<MainLoader />}>\n            <Switch>\n              <Route path={routes.home} exact component={Home} />\n              <Route path={routes.currency} component={Currency} />\n\n              <Redirect to={routes.home} />\n            </Switch>\n          </Suspense>\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  );\n}\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport {\r\n  exchangeRateReducer,\r\n  updateDataReducer,\r\n  favoriteReducer,\r\n  currencyReducer,\r\n  sagaWatcher,\r\n  putUpdatedDataReducer,\r\n  watchUpdateData,\r\n} from \"./ducks/currency\";\r\nconst saga = createSagaMiddleware();\r\n\r\nconst persistConfig = {\r\n  key: \"favoritesList\",\r\n  storage,\r\n  blacklist: [\"currency\", \"data\", \"updatedData\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n  saga,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  currency: currencyReducer,\r\n  favorite: favoriteReducer,\r\n  data: updateDataReducer,\r\n  rate: exchangeRateReducer,\r\n  updatedData: putUpdatedDataReducer,\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\n\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nsaga.run(sagaWatcher);\r\nsaga.run(watchUpdateData);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  margin-top: 0;\r\n}\r\n\r\np {\r\nmargin: 0;\r\n}\r\n\r\nul {\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style-type: none;\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nimport GlobalStyle from \"./styles/globalStyles\";\nimport Theme from \"./styles/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <ThemeProvider theme={Theme}>\n            <GlobalStyle />\n            <App />\n          </ThemeProvider>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export default {\r\n  home: \"/\",\r\n  currency: \"/currency\",\r\n};\r\n","import styled from \"styled-components\";\r\n\r\ninterface BtnEmptyProps {\r\n  type: string;\r\n}\r\n\r\nexport const BtnEmpty = styled.section<BtnEmptyProps>`\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    width: 15px;\r\n    height: 15px;\r\n  }\r\n  width: 20px;\r\n  height: 20px;\r\n  background-image: url(\"./images/starEmpty.svg\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ninterface BtnFavoriteProps {\r\n  type: string;\r\n}\r\n\r\nexport const BtnFavorite = styled.section<BtnFavoriteProps>`\r\n  width: 20px;\r\n  height: 20px;\r\n  background-image: url(\"./images/star.svg\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n  width: 80%;\r\n  margin: auto;\r\n  margin-top: 100px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const EmptyFavorites = styled.li`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-weight: 800;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Favorite = styled.div`\r\n  margin: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 22px;\r\n  margin-top: 20px;\r\n  width: 40px;\r\n  height: 40px;\r\n  background-image: url(\"./images/star.svg\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  color: ${(props) => props.theme.colors.white};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormBox = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Field } from \"formik\";\r\n\r\nexport const FormControl = styled(Field)`\r\n  outline: none;\r\n  width: 75%;\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n  border: 1px solid ${(props) => props.theme.colors.black};\r\n  border-color: ${(props) => props.theme.colors.black};\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport const FormCurrency = styled(Form)`\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    width: 90%;\r\n  }\r\n\r\n  margin: auto;\r\n  width: 50%;\r\n  height: 300px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormEqually = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-image: url(\"/images/equal.svg\");\r\n  text-align: center;\r\n  font-size: 30px;\r\n  margin-bottom: 26px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport const FormSelect = styled(Form.Control)`\r\n  @media ${({ theme }) => theme.breakpoints.mobileL} {\r\n    width: 40%;\r\n  }\r\n\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    font-size: 12px;\r\n  }\r\n  width: 20%;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.header`\r\n  width: 100%;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ItemContainer = styled.div`\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    width: 80%;\r\n  }\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 17%;\r\n  margin: auto;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ItemFavorites = styled.li`\r\n  width: 80%;\r\n  margin: auto;\r\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border-radius: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ninterface FavoriteStyled {\r\n  favorite?: boolean;\r\n}\r\n\r\nexport const ListFavorite = styled.ul`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  width: 60%;\r\n  text-align: center;\r\n  padding: 20px;\r\n  padding-bottom: 30px;\r\n  border-bottom: ${(props: FavoriteStyled) =>\r\n    props.favorite && \"4px dashed #ffc107\"};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoaderMain = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  margin-top: 100px;\r\n  text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Logo = styled.div`\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n  width: 45px;\r\n  height: 45px;\r\n  background-image: url(${\"./images/return-of-investment.svg\"});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainTitle = styled.h1`\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    font-size: 24px;\r\n  }\r\n  text-align: center;\r\n  font-size: 34px;\r\n  font-weight: 700;\r\n  color: ${(props) => props.theme.colors.hover};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Nav = styled.nav`\r\n  width: 80%;\r\n  height: 70%;\r\n  margin: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const NavLinks = styled(NavLink)`\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    font-size: 14px;\r\n  }\r\n  font-size: 24px;\r\n  color: ${(props) => props.theme.colors.main};\r\n  text-decoration: none;\r\n  font-weight: 700;\r\n  transition: 250ms color linear;\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.hover};\r\n    font-weight: 700;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavigationItems = styled.li``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavigationList = styled.ul`\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    width: 200px;\r\n  }\r\n  display: flex;\r\n  width: 300px;\r\n  justify-content: space-around;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Option = styled.option``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h2`\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    font-size: 22px;\r\n  }\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: ${(props) => props.theme.colors.hover};\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TitleHome = styled.h2`\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    font-size: 18px;\r\n  }\r\n  font-size: 28px;\r\n  text-align: center;\r\n  margin-top: 30px;\r\n  color: ${(props) => props.theme.colors.main};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Value = styled.p`\r\n  @media ${({ theme }) => theme.breakpoints.tablet} {\r\n    font-size: 14px;\r\n  }\r\n  font-size: 18px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ninterface StyledProps {\r\n  transparent?: boolean;\r\n}\r\n\r\nexport const ErrorMessage = styled.div<StyledProps>`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: ${(props) =>\r\n    props.transparent\r\n      ? props.theme.colors.transparent\r\n      : props.theme.colors.red};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n`;\r\n","import * as Yup from \"yup\";\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n  fromAmount: Yup.number().required(\"Field is required\"),\r\n  toAmount: Yup.number().required(\"Field is required\"),\r\n});\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  loadData,\r\n  getCurrencyArray,\r\n  getFromCurrency,\r\n  getToCurrency,\r\n  getExchangeRate,\r\n  updateData,\r\n  getUpdatedData,\r\n  addExchangeRate,\r\n} from \"../redux/ducks/currency\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { validationSchema } from \"../helpers/validation\";\r\nimport { InitialValues, CurrencyTypes } from \"../helpers/interfaces\";\r\n\r\n// Components\r\nimport {\r\n  FormBox,\r\n  Option,\r\n  FormEqually,\r\n  FormCurrency,\r\n  FormControl,\r\n  FormSelect,\r\n  ErrorMessage,\r\n  Image,\r\n} from \"./styled\";\r\n\r\n// Styles\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport function CurrencyRow() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(loadData());\r\n  }, [dispatch]);\r\n\r\n  const currency: Array<string> | undefined = useSelector(getCurrencyArray);\r\n  const selectedFromCurrency: string | undefined = useSelector(getFromCurrency);\r\n  const selectedToCurrency: string | undefined = useSelector(getToCurrency);\r\n  const selectedExchangeRate: number | undefined = useSelector(getExchangeRate);\r\n  const updatedData: CurrencyTypes = useSelector(getUpdatedData);\r\n\r\n  const [fromCurrency, setFromCurrency] = useState<string | undefined>(\r\n    selectedFromCurrency\r\n  );\r\n  const [toCurrency, setToCurrency] = useState<string | undefined>(\r\n    selectedToCurrency\r\n  );\r\n  const [exchangeRate, setExchangeRate] = useState<number>(\r\n    selectedExchangeRate\r\n  );\r\n  const [amount, setAmount] = useState<number>(1);\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState<boolean>(\r\n    true\r\n  );\r\n\r\n  const firstExchange = useRef<number>(exchangeRate);\r\n\r\n  useEffect(() => {\r\n    setToCurrency(selectedToCurrency);\r\n  }, [selectedToCurrency]);\r\n\r\n  useEffect(() => {\r\n    if (updatedData.rates && toCurrency) {\r\n      setExchangeRate(updatedData.rates[toCurrency]);\r\n    }\r\n  }, [dispatch, toCurrency, updatedData.rates]);\r\n\r\n  useEffect(() => {\r\n    dispatch(addExchangeRate(firstExchange.current));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (fromCurrency && toCurrency) {\r\n      dispatch(updateData(fromCurrency, toCurrency));\r\n    }\r\n  }, [dispatch, fromCurrency, toCurrency]);\r\n\r\n  const getInitialValues = (): InitialValues => {\r\n    return {\r\n      fromAmount: amountInFromCurrency\r\n        ? amount\r\n        : (amount / exchangeRate).toFixed(1),\r\n      toAmount: amountInFromCurrency\r\n        ? (amount * exchangeRate).toFixed(1)\r\n        : amount,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={getInitialValues()}\r\n        validationSchema={validationSchema}\r\n        onSubmit={() => {}}\r\n      >\r\n        {({ values, errors, touched }) => (\r\n          <FormCurrency>\r\n            <FormBox>\r\n              <FormControl\r\n                type=\"number\"\r\n                name=\"fromAmount\"\r\n                value={values.fromAmount}\r\n                onChange={(e: {\r\n                  target: { value: React.SetStateAction<number> };\r\n                }) => {\r\n                  setAmount(e.target.value);\r\n                  setAmountInFromCurrency(true);\r\n                }}\r\n              />\r\n              <FormSelect\r\n                as=\"select\"\r\n                value={fromCurrency}\r\n                onChange={(e: {\r\n                  target: { value: React.SetStateAction<string | undefined> };\r\n                }) => setFromCurrency(e.target.value)}\r\n              >\r\n                {currency &&\r\n                  currency.map((item) => (\r\n                    <Option key={item} value={item}>\r\n                      {item}\r\n                    </Option>\r\n                  ))}\r\n              </FormSelect>\r\n            </FormBox>\r\n            {errors.fromAmount && touched.fromAmount ? (\r\n              <ErrorMessage>{errors.fromAmount}</ErrorMessage>\r\n            ) : (\r\n              <ErrorMessage transparent>Transparent</ErrorMessage>\r\n            )}\r\n            <Image src=\"./images/equal.svg\" alt=\"equal\" />\r\n            <FormBox>\r\n              <FormControl\r\n                type=\"number\"\r\n                name=\"toAmount\"\r\n                value={values.toAmount}\r\n                onChange={(e: {\r\n                  target: { value: React.SetStateAction<number> };\r\n                }) => {\r\n                  setAmount(e.target.value);\r\n                  setAmountInFromCurrency(false);\r\n                }}\r\n              />\r\n              <FormSelect\r\n                as=\"select\"\r\n                value={toCurrency}\r\n                onChange={(e: {\r\n                  target: { value: React.SetStateAction<string | undefined> };\r\n                }) => setToCurrency(e.target.value)}\r\n              >\r\n                {currency &&\r\n                  currency.map((item) => (\r\n                    <Option key={item} value={item}>\r\n                      {item}\r\n                    </Option>\r\n                  ))}\r\n              </FormSelect>\r\n            </FormBox>\r\n            {errors.toAmount && touched.toAmount ? (\r\n              <ErrorMessage>{errors.toAmount}</ErrorMessage>\r\n            ) : (\r\n              <ErrorMessage transparent>Transparent</ErrorMessage>\r\n            )}\r\n          </FormCurrency>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nCurrencyRow.defaultProps = {\r\n  currency: [],\r\n  selectedFromCurrency: \"\",\r\n  selectedToCurrency: \"\",\r\n  selectedExchangeRate: 0,\r\n};\r\n\r\nCurrencyRow.propTypes = {\r\n  currency: PropTypes.arrayOf(PropTypes.string),\r\n  selectedFromCurrency: PropTypes.string,\r\n  selectedToCurrency: PropTypes.string,\r\n  selectedExchangeRate: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport { CurrencyRow } from \"./CurrencyRow\";\r\nimport { Title, Container } from \"./styled\";\r\n\r\nexport function Convert() {\r\n  return (\r\n    <Container>\r\n      <Title>Convert</Title>\r\n      <CurrencyRow />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  addFavorite,\r\n  deleteFavorite,\r\n  getFavorites,\r\n  getRegularCurrency,\r\n  getNumberOfFavorites,\r\n} from \"../redux/ducks/currency\";\r\n\r\n// Components\r\nimport { MainLoader, Empty } from \".\";\r\nimport {\r\n  ListFavorite,\r\n  BtnFavorite,\r\n  BtnEmpty,\r\n  ItemFavorites,\r\n  ItemContainer,\r\n  Value,\r\n} from \"./styled\";\r\n\r\nexport function CurrencyList() {\r\n  const dispatch = useDispatch();\r\n  const favorites: Array<string> | undefined = useSelector(getFavorites);\r\n  const regularCurrency: Array<string> | undefined = useSelector(\r\n    getRegularCurrency\r\n  );\r\n  const numberOfFavorites: Number | undefined = useSelector(\r\n    getNumberOfFavorites\r\n  );\r\n\r\n  const toggleFavAction = (text: string) => {\r\n    if (!favorites.includes(text)) {\r\n      dispatch(addFavorite(text));\r\n    }\r\n\r\n    if (favorites.includes(text)) {\r\n      dispatch(deleteFavorite(text));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListFavorite favorite>\r\n        {numberOfFavorites > 0 ? (\r\n          favorites.map((item) => (\r\n            <ItemFavorites key={item}>\r\n              <ItemContainer>\r\n                <Value>{item}</Value>\r\n                <BtnFavorite\r\n                  className=\"Btn\"\r\n                  type=\"button\"\r\n                  onClick={() => toggleFavAction(item)}\r\n                ></BtnFavorite>\r\n              </ItemContainer>\r\n            </ItemFavorites>\r\n          ))\r\n        ) : (\r\n          <Empty />\r\n        )}\r\n      </ListFavorite>\r\n      <ListFavorite>\r\n        {regularCurrency ? (\r\n          regularCurrency.map((item) => (\r\n            <ItemFavorites key={item}>\r\n              <ItemContainer>\r\n                <Value>{item}</Value>\r\n                <BtnEmpty\r\n                  type=\"button\"\r\n                  onClick={() => toggleFavAction(item)}\r\n                ></BtnEmpty>\r\n              </ItemContainer>\r\n            </ItemFavorites>\r\n          ))\r\n        ) : (\r\n          <MainLoader />\r\n        )}\r\n      </ListFavorite>\r\n    </>\r\n  );\r\n}\r\n\r\nCurrencyList.defaultProps = {\r\n  numberOfFavorites: 0,\r\n  favorites: [],\r\n};\r\n\r\nCurrencyList.propTypes = {\r\n  numberOfFavorites: PropTypes.number,\r\n  favorites: PropTypes.arrayOf(PropTypes.string),\r\n  regularCurrency: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n","import React from \"react\";\r\n\r\nimport { EmptyFavorites } from \"./styled\";\r\n\r\nexport const Empty = () => (\r\n  <EmptyFavorites>No favorite currencies</EmptyFavorites>\r\n);\r\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nimport { LoaderMain } from \"./styled\";\n\nexport const MainLoader = () => (\n  <LoaderMain>\n    <Loader type=\"Oval\" color=\"#a6dbfb\" height={80} width={80} />\n  </LoaderMain>\n);\n","import React from \"react\";\r\n\r\nimport routes from \"../routes\";\r\n\r\n// Components\r\nimport {\r\n  Header,\r\n  Nav,\r\n  NavigationList,\r\n  NavigationItems,\r\n  Logo,\r\n  NavLinks,\r\n} from \"./styled\";\r\n\r\nexport function Navigation() {\r\n  return (\r\n    <Header>\r\n      <Nav>\r\n        <Logo />\r\n        <NavigationList>\r\n          <NavigationItems>\r\n            <NavLinks to={routes.home}>Home</NavLinks>\r\n          </NavigationItems>\r\n          <NavigationItems>\r\n            <NavLinks to={routes.currency}>Convert</NavLinks>\r\n          </NavigationItems>\r\n        </NavigationList>\r\n      </Nav>\r\n    </Header>\r\n  );\r\n}\r\n"],"sourceRoot":""}